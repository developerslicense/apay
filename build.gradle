// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false

    id 'java'
    id 'maven-publish' // is needed for publishing
    id 'signing' // is needed for signing your files
}


group 'kz.airbapay' // this is your groupId
version '0.0.3' // this is your version

ext { // this are variables
    pomGroupId = group
    pomVersion = version
    pomArtifactId = "airbapaysdkandroid"
    pomArtifactName = "AirbaPaySdkAndroid"

    jdkCompileVersion = 17
}

dependencies {
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 17
}

test {
    useJUnitPlatform()
}

sourceCompatibility = "${jdkCompileVersion}"
targetCompatibility = "${jdkCompileVersion}"

java {
    withJavadocJar()
    withSourcesJar()
    artifacts {
        archives file("/Users/mikhail.belikov/AndroidStudioProjects/apayAndroid/build/outputs/aar/airbapaysdkandroid-release.aar")
    }
    toolchain {
        languageVersion.set(JavaLanguageVersion.of("${jdkCompileVersion}"))
    }
}

def Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${pomGroupId}"
            artifactId = "${pomArtifactId}"
            version = "${pomVersion}"

            from components.java

            pom {
                name = "${pomArtifactName}"
                description = "AirbaPay sdk android"
                url = "https://airbapay.kz"
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0' // the name of your license
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt' // url to your license
                    }
                }
                developers { // put the developers here
                    developer {
                        id = 'developerslicense'
                        name = 'AirbaPay'
                        email = 'developers.license@technodom.kz'
                    }
                }
                scm { // GIT data of your project
                    url = "scm:git:https://github.com/developerslicense/apay.git"
                    connection = 'scm:git:git:github.com/developerslicense/apay.git'
                    developerConnection = 'scm:git:ssh://github.com:developerslicense/apay.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            // url = "https://s01.oss.sonatype.org/content/repositories/snapshots/" // this is the repo for snapshots
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/" // this is deploys to the stating repo in nexus
            credentials {
                username = "developers.license@technodom.kz"
                password = properties.osshrPass
            }
        }
    }
}
signing {
    // By default the Signing Plugin uses a Java-based implementation of PGP for signing. This implementation cannot use the gpg-agent program for managing private keys, though. If you want to use the gpg-agent, you can change the signatory implementation used by the Signing Plugin:
    useGpgCmd() // YOU NEED THIS. Without this method, gradle will not work with GnuPG keys.
    sign publishing.publications.mavenJava
}